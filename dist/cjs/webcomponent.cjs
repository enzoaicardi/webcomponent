"use strict";class t extends Error{constructor(t){super(`[${t.name}] Missing static property tagName.`),this.name="MissingTagName"}}class s extends Error{constructor(t){super(`[${t.name} ${t.tagName}] Cannot render component without rendering method (render | renderAsync).`),this.name="MissingRenderingMethod"}}class i extends Error{constructor(t){super(`[${t.name} ${t.tagName}] Unauthorized implicit coercion without synchronous rendering. Use toString instead.`),this.name="UnauthorizedCoercion"}}class e{static raw=Symbol();static t=Symbol();static i=Symbol()}function n(s){const i=this[e.i].tagName;if(i){return`<${i}${this.attrs?Object.entries(this.attrs).reduce(((t,[s,i])=>t+(/[^:.\w_-]/.test(s)?"":` ${s}="${i}"`)),""):""}>${s}</${i}>`}throw new t(this[e.i])}function r(){if(this.render)return this[e.raw](this.render());if(this.renderAsync)return this.renderAsync().then((t=>this[e.raw](t)));throw new s(this[e.i])}function o(){if(this.render)return this[e.raw](this.render());throw new i(this[e.i])}const c=document.createElement("template"),h=new Set;class a extends HTMLElement{static tagName;static define(s=this){if(!s.tagName)throw new t(this);h.has(s)||(h.add(s),customElements.define(s.tagName,s))}constructor(t){a.define(t),super()}[e.raw]=n;[e.i]=Object.getPrototypeOf(this).constructor;[e.t](t){c.innerHTML=t;const s=c.content,i=this.attrs;if(i)for(const t in i)this.setAttribute(t,i[t]);this.appendChild(s)}attrs;connectedCallback(){if(!this.childNodes.length)if(this.render)this[e.t](this.render());else if(this.renderAsync)return this.renderAsync().then((t=>this[e.t](t)))}toString=r;[Symbol.toPrimitive]=o}class u{static tagName;constructor(){}[e.raw]=n;[e.i]=Object.getPrototypeOf(this).constructor;attrs;toString=r;[Symbol.toPrimitive]=o}exports.client=a,exports.server=u;
