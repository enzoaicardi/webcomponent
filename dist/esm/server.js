class t{static raw=Symbol();static t=Symbol();static i=Symbol()}class s extends Error{constructor(t){super(`[${t.name}] Missing static property tagName.`),this.name="MissingTagName"}}class r extends Error{constructor(t){super(`[${t.name} ${t.tagName}] Cannot render component without rendering method (render | renderAsync).`),this.name="MissingRenderingMethod"}}class i extends Error{constructor(t){super(`[${t.name} ${t.tagName}] Unauthorized implicit coercion without synchronous rendering. Use toString instead.`),this.name="UnauthorizedCoercion"}}class e{static tagName;[t.i]=Object.getPrototypeOf(this).constructor;[t.raw](r){const i=this[t.i].tagName;if(i){return`<${i}${Array.from(this.attrs).reduce(((t,[s,r])=>t+(/[^:.\w_-]/.test(s)?"":` ${s}="${r}"`)),"")}>${r}</${i}>`}throw new s(this[t.i])}attrs=new Map;toString(){if(this.render)return this[t.raw](this.render());if(this.renderAsync)return this.renderAsync().then((s=>this[t.raw](s)));throw new r(this[t.i])}[Symbol.toPrimitive](){if(this.render)return this[t.raw](this.render());throw new i(this[t.i])}}class n extends e{}export{n as WebComponent};
