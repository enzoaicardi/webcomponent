// Generated by dts-bundle-generator v9.5.1

declare class WebComponentCore {
	/** @type {string} The element <tag-name> */
	static tagName: string;
	/** Element attributes */
	attributes: ServerNamedNodeMap | NamedNodeMap;
	/**
	 * Method used to define the content of a WebComponent
	 * @returns {string}
	 */
	render?(): string;
	/**
	 * Method used to define the content of a WebComponent
	 * @returns {Promise<string>}
	 */
	renderAsync?(): Promise<string>;
	/**
	 * Method used to return the string representation of the WebComponent
	 * @returns {string}
	 */
	toString(): string | Promise<string>;
	/**
	 * Method used to return the primitive representation of the WebComponent
	 * @returns {string}
	 */
	[Symbol.toPrimitive](): string;
}
declare class ServerWebComponent extends WebComponentCore {
	attributes: ServerNamedNodeMap;
	classList: ServerDOMTokenList;
	style: ServerCSSStyleDeclaration;
	constructor();
	setAttribute(qualifiedName: string, value: unknown): void;
	getAttribute(qualifiedName: string): string;
	hasAttribute(qualifiedName: string): boolean;
	removeAttribute(qualifiedName: string): void;
}
declare class ServerNamedNodeMap {
	[Symbol.iterator](): Generator<{
		name: string;
		value: unknown;
	}, void, unknown>;
}
declare class ServerDOMTokenList extends Set<string> {
	constructor(className?: string);
	/** @ts-ignore */
	add(...tokens: string[]): void;
	remove(...tokens: string[]): void;
	toggle(token: string, force?: boolean): boolean;
	replace(oldToken: string, newToken: string): void;
	item(token: string): number;
	contains: (value: string) => boolean;
	get length(): number;
	get value(): string;
	[Symbol.toPrimitive](): string;
}
export type ServerCSSStyleDeclaration = {
	[key in keyof Omit<CSSStyleDeclaration, "setProperty" | "getPropertyCSSValue" | "getPropertyPriority" | "getPropertyValue" | "item">]?: unknown;
} & {
	length: number;
	cssText: string;
	parentRule: null;
	removeProperty(property: string): void;
	[Symbol.toPrimitive](): string;
};
declare function ServerCSSStyleDeclaration(cssRules?: string): void;
declare namespace ServerCSSStyleDeclaration {
	var prototype: ServerCSSStyleDeclaration;
}

export {
	ServerWebComponent as WebComponent,
};

export {};
