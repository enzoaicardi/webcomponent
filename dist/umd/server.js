!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).t={})}(this,(function(t){"use strict";class e{static raw=Symbol();static i=Symbol();static o=Symbol()}class s extends Error{constructor(t){super(`[${t.name}] Missing static property tagName.`),this.name="MissingTagName"}}class i extends Error{constructor(t){super(`[${t.name} ${t.tagName}] Cannot render component without rendering method (render | renderAsync).`),this.name="MissingRenderingMethod"}}class n extends Error{constructor(t){super(`[${t.name} ${t.tagName}] Unauthorized implicit coercion without synchronous rendering. Use toString instead.`),this.name="UnauthorizedCoercion"}}class r{static tagName;[e.o]=Object.getPrototypeOf(this).constructor;[e.raw](t){const i=this[e.o].tagName;if(i){return`<${i}${Array.from(this.attrs).reduce(((t,[e,s])=>t+(/[^:.\w_-]/.test(e)?"":` ${e}="${s}"`)),"")}>${t}</${i}>`}throw new s(this[e.o])}attrs=new Map;toString(){if(this.render)return this[e.raw](this.render());if(this.renderAsync)return this.renderAsync().then((t=>this[e.raw](t)));throw new i(this[e.o])}[Symbol.toPrimitive](){if(this.render)return this[e.raw](this.render());throw new n(this[e.o])}}t.t=class extends r{}}));
